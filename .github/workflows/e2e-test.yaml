name: End-to-End Test

on:
  pull_request:
    branches: [main]

env:
  NAMESPACE: cron-set-controller-system

jobs:
  docs_only_check:
    name: Check for docs-only change
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      docs_only: ${{ steps.docs_only_check.outputs.docs_only }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - id: changed-files
        name: Get changed files
        uses: tj-actions/changed-files@54849deb963ca9f24185fb5de2965e002d066e6b #v37.0.5
        with:
          files_ignore: |
            **/*.md
            **/*.pnd
            **/*.txt
      - id: which_files
        name: Which files was changed
        run: |
          echo "One or more files has changed."
          echo "List all the files that have changed: ${{ steps.changed-files.outputs.all_changed_files }}"
          echo "What is any changed ${{ steps.changed-files.outputs.any_changed }}"
      - id: docs_only_check
        if: steps.changed-files.outputs.any_changed != 'true'
        name: Check for docs-only changes
        run: echo "docs_only=true" >> $GITHUB_OUTPUT

  end-to-end:
    runs-on: ubuntu-latest
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
          cache: true

      - uses: ko-build/setup-ko@v0.6
        with:
          version: v0.13.0
    
      - name: Set up KinD
        id: kind
        run: |
          # create KinD cluster
          make kind-cluster

      - name: Build and load
        env:
          KO_DOCKER_REPO: ko.local/grasse/cronset-controller
        run: |
          ko build --sbom=none --bare
          kind load docker-image "$KO_DOCKER_REPO"

      - name: Run e2e
        shell: bash
        run: |
          # install kuttl
          make kuttl
          # run e2e test
          VERSION=latest make e2e

      - name: Debug failure
        if: failure()
        run: |
          kubectl version
          kubectl get all
          kubectl get cronset
          kubectl get cronjob
          kubectl get crd
          POD=$(kubectl get pods -n $NAMESPACE -l control-plane=controller-manager --output=jsonpath={.items..metadata.name})
          kubectl logs -n $NAMESPACE $POD -c manager
